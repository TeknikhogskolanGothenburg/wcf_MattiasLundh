//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CarServiceClient.CarRentalService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseEntity", Namespace="http://schemas.datacontract.org/2004/07/Domain")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CarServiceClient.CarRentalService.Customer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CarServiceClient.CarRentalService.Booking))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CarServiceClient.CarRentalService.Car))]
    public partial class BaseEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnUtcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOnUtc {
            get {
                return this.CreatedOnUtcField;
            }
            set {
                if ((this.CreatedOnUtcField.Equals(value) != true)) {
                    this.CreatedOnUtcField = value;
                    this.RaisePropertyChanged("CreatedOnUtc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="http://schemas.datacontract.org/2004/07/Domain")]
    [System.SerializableAttribute()]
    public partial class Customer : CarServiceClient.CarRentalService.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TelField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Tel {
            get {
                return this.TelField;
            }
            set {
                if ((this.TelField.Equals(value) != true)) {
                    this.TelField = value;
                    this.RaisePropertyChanged("Tel");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Booking", Namespace="http://schemas.datacontract.org/2004/07/Domain")]
    [System.SerializableAttribute()]
    public partial class Booking : CarServiceClient.CarRentalService.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CarIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CarID {
            get {
                return this.CarIDField;
            }
            set {
                if ((this.CarIDField.Equals(value) != true)) {
                    this.CarIDField = value;
                    this.RaisePropertyChanged("CarID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerID {
            get {
                return this.CustomerIDField;
            }
            set {
                if ((this.CustomerIDField.Equals(value) != true)) {
                    this.CustomerIDField = value;
                    this.RaisePropertyChanged("CustomerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Car", Namespace="http://schemas.datacontract.org/2004/07/Domain")]
    [System.SerializableAttribute()]
    public partial class Car : CarServiceClient.CarRentalService.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AvaliableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegistrationNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> YearField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Avaliable {
            get {
                return this.AvaliableField;
            }
            set {
                if ((this.AvaliableField.Equals(value) != true)) {
                    this.AvaliableField = value;
                    this.RaisePropertyChanged("Avaliable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Brand {
            get {
                return this.BrandField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandField, value) != true)) {
                    this.BrandField = value;
                    this.RaisePropertyChanged("Brand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Model {
            get {
                return this.ModelField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelField, value) != true)) {
                    this.ModelField = value;
                    this.RaisePropertyChanged("Model");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegistrationNumber {
            get {
                return this.RegistrationNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.RegistrationNumberField, value) != true)) {
                    this.RegistrationNumberField = value;
                    this.RaisePropertyChanged("RegistrationNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Year {
            get {
                return this.YearField;
            }
            set {
                if ((this.YearField.Equals(value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NoDataAvaliable", Namespace="http://schemas.datacontract.org/2004/07/wcfCarRentalService.Exceptions")]
    [System.SerializableAttribute()]
    public partial class NoDataAvaliable : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InfoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Info {
            get {
                return this.InfoField;
            }
            set {
                if ((object.ReferenceEquals(this.InfoField, value) != true)) {
                    this.InfoField = value;
                    this.RaisePropertyChanged("Info");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccessDenied", Namespace="http://schemas.datacontract.org/2004/07/wcfCarRentalService.Exceptions")]
    [System.SerializableAttribute()]
    public partial class AccessDenied : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InfoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Info {
            get {
                return this.InfoField;
            }
            set {
                if ((object.ReferenceEquals(this.InfoField, value) != true)) {
                    this.InfoField = value;
                    this.RaisePropertyChanged("Info");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CarRentalService.ICarRentalAdministrationService")]
    public interface ICarRentalAdministrationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalAdministrationService/Description", ReplyAction="http://tempuri.org/ICarRentalAdministrationService/DescriptionResponse")]
        string[] Description();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalAdministrationService/Description", ReplyAction="http://tempuri.org/ICarRentalAdministrationService/DescriptionResponse")]
        System.Threading.Tasks.Task<string[]> DescriptionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalAdministrationService/AddCar", ReplyAction="http://tempuri.org/ICarRentalAdministrationService/AddCarResponse")]
        void AddCar(CarServiceClient.CarRentalService.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalAdministrationService/AddCar", ReplyAction="http://tempuri.org/ICarRentalAdministrationService/AddCarResponse")]
        System.Threading.Tasks.Task AddCarAsync(CarServiceClient.CarRentalService.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalAdministrationService/RemoveCar", ReplyAction="http://tempuri.org/ICarRentalAdministrationService/RemoveCarResponse")]
        void RemoveCar(int carId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalAdministrationService/RemoveCar", ReplyAction="http://tempuri.org/ICarRentalAdministrationService/RemoveCarResponse")]
        System.Threading.Tasks.Task RemoveCarAsync(int carId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalAdministrationService/GetCar", ReplyAction="http://tempuri.org/ICarRentalAdministrationService/GetCarResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CarServiceClient.CarRentalService.NoDataAvaliable), Action="http://tempuri.org/ICarRentalAdministrationService/GetCarNoDataAvaliableFault", Name="NoDataAvaliable", Namespace="http://schemas.datacontract.org/2004/07/wcfCarRentalService.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CarServiceClient.CarRentalService.AccessDenied), Action="http://tempuri.org/ICarRentalAdministrationService/GetCarAccessDeniedFault", Name="AccessDenied", Namespace="http://schemas.datacontract.org/2004/07/wcfCarRentalService.Exceptions")]
        CarServiceClient.CarRentalService.CarInfo GetCar(CarServiceClient.CarRentalService.CarRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalAdministrationService/GetCar", ReplyAction="http://tempuri.org/ICarRentalAdministrationService/GetCarResponse")]
        System.Threading.Tasks.Task<CarServiceClient.CarRentalService.CarInfo> GetCarAsync(CarServiceClient.CarRentalService.CarRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalAdministrationService/GetUnbookedCars", ReplyAction="http://tempuri.org/ICarRentalAdministrationService/GetUnbookedCarsResponse")]
        CarServiceClient.CarRentalService.Car[] GetUnbookedCars(System.DateTime from, System.DateTime to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalAdministrationService/GetUnbookedCars", ReplyAction="http://tempuri.org/ICarRentalAdministrationService/GetUnbookedCarsResponse")]
        System.Threading.Tasks.Task<CarServiceClient.CarRentalService.Car[]> GetUnbookedCarsAsync(System.DateTime from, System.DateTime to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalAdministrationService/ReturnCar", ReplyAction="http://tempuri.org/ICarRentalAdministrationService/ReturnCarResponse")]
        void ReturnCar(int carId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalAdministrationService/ReturnCar", ReplyAction="http://tempuri.org/ICarRentalAdministrationService/ReturnCarResponse")]
        System.Threading.Tasks.Task ReturnCarAsync(int carId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalAdministrationService/LendCar", ReplyAction="http://tempuri.org/ICarRentalAdministrationService/LendCarResponse")]
        void LendCar(int carId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalAdministrationService/LendCar", ReplyAction="http://tempuri.org/ICarRentalAdministrationService/LendCarResponse")]
        System.Threading.Tasks.Task LendCarAsync(int carId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalAdministrationService/GetCustomers", ReplyAction="http://tempuri.org/ICarRentalAdministrationService/GetCustomersResponse")]
        CarServiceClient.CarRentalService.Customer[] GetCustomers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalAdministrationService/GetCustomers", ReplyAction="http://tempuri.org/ICarRentalAdministrationService/GetCustomersResponse")]
        System.Threading.Tasks.Task<CarServiceClient.CarRentalService.Customer[]> GetCustomersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalAdministrationService/GetBookingsByRelation", ReplyAction="http://tempuri.org/ICarRentalAdministrationService/GetBookingsByRelationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CarServiceClient.CarRentalService.NoDataAvaliable), Action="http://tempuri.org/ICarRentalAdministrationService/GetBookingsByRelationNoDataAva" +
            "liableFault", Name="NoDataAvaliable", Namespace="http://schemas.datacontract.org/2004/07/wcfCarRentalService.Exceptions")]
        CarServiceClient.CarRentalService.Booking[] GetBookingsByRelation(CarServiceClient.CarRentalService.BaseEntity entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalAdministrationService/GetBookingsByRelation", ReplyAction="http://tempuri.org/ICarRentalAdministrationService/GetBookingsByRelationResponse")]
        System.Threading.Tasks.Task<CarServiceClient.CarRentalService.Booking[]> GetBookingsByRelationAsync(CarServiceClient.CarRentalService.BaseEntity entity);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CarRequestObject", WrapperNamespace="www.someplace.com/2018/11/02", IsWrapped=true)]
    public partial class CarRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="www.someplace.com/2018/11/02")]
        public string Key;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="www.someplace.com/2018/11/02", Order=0)]
        public int CarId;
        
        public CarRequest() {
        }
        
        public CarRequest(string Key, int CarId) {
            this.Key = Key;
            this.CarId = CarId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CarInfoObject", WrapperNamespace="www.someplace.com/2018/11/02", IsWrapped=true)]
    public partial class CarInfo {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="www.someplace.com/2018/11/02", Order=0)]
        public bool Avaliable;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="www.someplace.com/2018/11/02", Order=1)]
        public string Brand;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="www.someplace.com/2018/11/02", Order=2)]
        public int Id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="www.someplace.com/2018/11/02", Order=3)]
        public string Model;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="www.someplace.com/2018/11/02", Order=4)]
        public string RegistrationNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="www.someplace.com/2018/11/02", Order=5)]
        public System.Nullable<int> Year;
        
        public CarInfo() {
        }
        
        public CarInfo(bool Avaliable, string Brand, int Id, string Model, string RegistrationNumber, System.Nullable<int> Year) {
            this.Avaliable = Avaliable;
            this.Brand = Brand;
            this.Id = Id;
            this.Model = Model;
            this.RegistrationNumber = RegistrationNumber;
            this.Year = Year;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICarRentalAdministrationServiceChannel : CarServiceClient.CarRentalService.ICarRentalAdministrationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CarRentalAdministrationServiceClient : System.ServiceModel.ClientBase<CarServiceClient.CarRentalService.ICarRentalAdministrationService>, CarServiceClient.CarRentalService.ICarRentalAdministrationService {
        
        public CarRentalAdministrationServiceClient() {
        }
        
        public CarRentalAdministrationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CarRentalAdministrationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CarRentalAdministrationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CarRentalAdministrationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] Description() {
            return base.Channel.Description();
        }
        
        public System.Threading.Tasks.Task<string[]> DescriptionAsync() {
            return base.Channel.DescriptionAsync();
        }
        
        public void AddCar(CarServiceClient.CarRentalService.Car car) {
            base.Channel.AddCar(car);
        }
        
        public System.Threading.Tasks.Task AddCarAsync(CarServiceClient.CarRentalService.Car car) {
            return base.Channel.AddCarAsync(car);
        }
        
        public void RemoveCar(int carId) {
            base.Channel.RemoveCar(carId);
        }
        
        public System.Threading.Tasks.Task RemoveCarAsync(int carId) {
            return base.Channel.RemoveCarAsync(carId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CarServiceClient.CarRentalService.CarInfo CarServiceClient.CarRentalService.ICarRentalAdministrationService.GetCar(CarServiceClient.CarRentalService.CarRequest request) {
            return base.Channel.GetCar(request);
        }
        
        public bool GetCar(string Key, int CarId, out string Brand, out int Id, out string Model, out string RegistrationNumber, out System.Nullable<int> Year) {
            CarServiceClient.CarRentalService.CarRequest inValue = new CarServiceClient.CarRentalService.CarRequest();
            inValue.Key = Key;
            inValue.CarId = CarId;
            CarServiceClient.CarRentalService.CarInfo retVal = ((CarServiceClient.CarRentalService.ICarRentalAdministrationService)(this)).GetCar(inValue);
            Brand = retVal.Brand;
            Id = retVal.Id;
            Model = retVal.Model;
            RegistrationNumber = retVal.RegistrationNumber;
            Year = retVal.Year;
            return retVal.Avaliable;
        }
        
        public System.Threading.Tasks.Task<CarServiceClient.CarRentalService.CarInfo> GetCarAsync(CarServiceClient.CarRentalService.CarRequest request) {
            return base.Channel.GetCarAsync(request);
        }
        
        public CarServiceClient.CarRentalService.Car[] GetUnbookedCars(System.DateTime from, System.DateTime to) {
            return base.Channel.GetUnbookedCars(from, to);
        }
        
        public System.Threading.Tasks.Task<CarServiceClient.CarRentalService.Car[]> GetUnbookedCarsAsync(System.DateTime from, System.DateTime to) {
            return base.Channel.GetUnbookedCarsAsync(from, to);
        }
        
        public void ReturnCar(int carId) {
            base.Channel.ReturnCar(carId);
        }
        
        public System.Threading.Tasks.Task ReturnCarAsync(int carId) {
            return base.Channel.ReturnCarAsync(carId);
        }
        
        public void LendCar(int carId) {
            base.Channel.LendCar(carId);
        }
        
        public System.Threading.Tasks.Task LendCarAsync(int carId) {
            return base.Channel.LendCarAsync(carId);
        }
        
        public CarServiceClient.CarRentalService.Customer[] GetCustomers() {
            return base.Channel.GetCustomers();
        }
        
        public System.Threading.Tasks.Task<CarServiceClient.CarRentalService.Customer[]> GetCustomersAsync() {
            return base.Channel.GetCustomersAsync();
        }
        
        public CarServiceClient.CarRentalService.Booking[] GetBookingsByRelation(CarServiceClient.CarRentalService.BaseEntity entity) {
            return base.Channel.GetBookingsByRelation(entity);
        }
        
        public System.Threading.Tasks.Task<CarServiceClient.CarRentalService.Booking[]> GetBookingsByRelationAsync(CarServiceClient.CarRentalService.BaseEntity entity) {
            return base.Channel.GetBookingsByRelationAsync(entity);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CarRentalService.ICarRentalCustomerService")]
    public interface ICarRentalCustomerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalCustomerService/GetCustomer", ReplyAction="http://tempuri.org/ICarRentalCustomerService/GetCustomerResponse")]
        CarServiceClient.CarRentalService.Customer GetCustomer(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalCustomerService/GetCustomer", ReplyAction="http://tempuri.org/ICarRentalCustomerService/GetCustomerResponse")]
        System.Threading.Tasks.Task<CarServiceClient.CarRentalService.Customer> GetCustomerAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalCustomerService/AddCustomer", ReplyAction="http://tempuri.org/ICarRentalCustomerService/AddCustomerResponse")]
        void AddCustomer(CarServiceClient.CarRentalService.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalCustomerService/AddCustomer", ReplyAction="http://tempuri.org/ICarRentalCustomerService/AddCustomerResponse")]
        System.Threading.Tasks.Task AddCustomerAsync(CarServiceClient.CarRentalService.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalCustomerService/RemoveCustomer", ReplyAction="http://tempuri.org/ICarRentalCustomerService/RemoveCustomerResponse")]
        void RemoveCustomer(int customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalCustomerService/RemoveCustomer", ReplyAction="http://tempuri.org/ICarRentalCustomerService/RemoveCustomerResponse")]
        System.Threading.Tasks.Task RemoveCustomerAsync(int customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalCustomerService/UpdateCustomer", ReplyAction="http://tempuri.org/ICarRentalCustomerService/UpdateCustomerResponse")]
        void UpdateCustomer(CarServiceClient.CarRentalService.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalCustomerService/UpdateCustomer", ReplyAction="http://tempuri.org/ICarRentalCustomerService/UpdateCustomerResponse")]
        System.Threading.Tasks.Task UpdateCustomerAsync(CarServiceClient.CarRentalService.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalCustomerService/GetAvaliableCars", ReplyAction="http://tempuri.org/ICarRentalCustomerService/GetAvaliableCarsResponse")]
        CarServiceClient.CarRentalService.Car[] GetAvaliableCars(System.DateTime from, System.DateTime to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalCustomerService/GetAvaliableCars", ReplyAction="http://tempuri.org/ICarRentalCustomerService/GetAvaliableCarsResponse")]
        System.Threading.Tasks.Task<CarServiceClient.CarRentalService.Car[]> GetAvaliableCarsAsync(System.DateTime from, System.DateTime to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalCustomerService/AddBooking", ReplyAction="http://tempuri.org/ICarRentalCustomerService/AddBookingResponse")]
        void AddBooking(CarServiceClient.CarRentalService.Booking booking);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalCustomerService/AddBooking", ReplyAction="http://tempuri.org/ICarRentalCustomerService/AddBookingResponse")]
        System.Threading.Tasks.Task AddBookingAsync(CarServiceClient.CarRentalService.Booking booking);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalCustomerService/RemoveBooking", ReplyAction="http://tempuri.org/ICarRentalCustomerService/RemoveBookingResponse")]
        void RemoveBooking(int bookingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalCustomerService/RemoveBooking", ReplyAction="http://tempuri.org/ICarRentalCustomerService/RemoveBookingResponse")]
        System.Threading.Tasks.Task RemoveBookingAsync(int bookingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalCustomerService/GetBookingsByCustomerId", ReplyAction="http://tempuri.org/ICarRentalCustomerService/GetBookingsByCustomerIdResponse")]
        CarServiceClient.CarRentalService.Booking[] GetBookingsByCustomerId(int customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalCustomerService/GetBookingsByCustomerId", ReplyAction="http://tempuri.org/ICarRentalCustomerService/GetBookingsByCustomerIdResponse")]
        System.Threading.Tasks.Task<CarServiceClient.CarRentalService.Booking[]> GetBookingsByCustomerIdAsync(int customerId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICarRentalCustomerServiceChannel : CarServiceClient.CarRentalService.ICarRentalCustomerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CarRentalCustomerServiceClient : System.ServiceModel.ClientBase<CarServiceClient.CarRentalService.ICarRentalCustomerService>, CarServiceClient.CarRentalService.ICarRentalCustomerService {
        
        public CarRentalCustomerServiceClient() {
        }
        
        public CarRentalCustomerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CarRentalCustomerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CarRentalCustomerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CarRentalCustomerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CarServiceClient.CarRentalService.Customer GetCustomer(string email) {
            return base.Channel.GetCustomer(email);
        }
        
        public System.Threading.Tasks.Task<CarServiceClient.CarRentalService.Customer> GetCustomerAsync(string email) {
            return base.Channel.GetCustomerAsync(email);
        }
        
        public void AddCustomer(CarServiceClient.CarRentalService.Customer customer) {
            base.Channel.AddCustomer(customer);
        }
        
        public System.Threading.Tasks.Task AddCustomerAsync(CarServiceClient.CarRentalService.Customer customer) {
            return base.Channel.AddCustomerAsync(customer);
        }
        
        public void RemoveCustomer(int customerId) {
            base.Channel.RemoveCustomer(customerId);
        }
        
        public System.Threading.Tasks.Task RemoveCustomerAsync(int customerId) {
            return base.Channel.RemoveCustomerAsync(customerId);
        }
        
        public void UpdateCustomer(CarServiceClient.CarRentalService.Customer customer) {
            base.Channel.UpdateCustomer(customer);
        }
        
        public System.Threading.Tasks.Task UpdateCustomerAsync(CarServiceClient.CarRentalService.Customer customer) {
            return base.Channel.UpdateCustomerAsync(customer);
        }
        
        public CarServiceClient.CarRentalService.Car[] GetAvaliableCars(System.DateTime from, System.DateTime to) {
            return base.Channel.GetAvaliableCars(from, to);
        }
        
        public System.Threading.Tasks.Task<CarServiceClient.CarRentalService.Car[]> GetAvaliableCarsAsync(System.DateTime from, System.DateTime to) {
            return base.Channel.GetAvaliableCarsAsync(from, to);
        }
        
        public void AddBooking(CarServiceClient.CarRentalService.Booking booking) {
            base.Channel.AddBooking(booking);
        }
        
        public System.Threading.Tasks.Task AddBookingAsync(CarServiceClient.CarRentalService.Booking booking) {
            return base.Channel.AddBookingAsync(booking);
        }
        
        public void RemoveBooking(int bookingId) {
            base.Channel.RemoveBooking(bookingId);
        }
        
        public System.Threading.Tasks.Task RemoveBookingAsync(int bookingId) {
            return base.Channel.RemoveBookingAsync(bookingId);
        }
        
        public CarServiceClient.CarRentalService.Booking[] GetBookingsByCustomerId(int customerId) {
            return base.Channel.GetBookingsByCustomerId(customerId);
        }
        
        public System.Threading.Tasks.Task<CarServiceClient.CarRentalService.Booking[]> GetBookingsByCustomerIdAsync(int customerId) {
            return base.Channel.GetBookingsByCustomerIdAsync(customerId);
        }
    }
}
